#!/bin/sh
# postinst script for ovpn
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

PATHOPENVPN=/etc/openvpn/server/
PATHOPENVPNEXE=$(whereis openvpn | awk '{print $2}')
PATHRSA="/opt/easy-rsa"
PATHRSAREQ=${PATHRSA}/pki/reqs/server.req
PATHRSAKEY=${PATHRSA}/pki/private/server.key
PATHRSACRT=${PATHRSA}/pki/issued/server.crt
PATHRSACA=${PATHRSA}/pki/ca.crt
PATHRSATA=${PATHRSA}/pki/ta.key

case "$1" in
    configure)

        # Configure firewall
        UFW=$(sudo ufw status)
        if [ $UFW != 'Status: inactive' ]; then
            firewall-rules create allow-1194 --allow=udp:1194 --direction=INGRESS
        fi

        # allow traffic routing
        echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
        echo "allow traffic routing:"
        sudo sysctl -p
        echo "---"

        # set name network interface
        IFACE=$(route | grep default | awk '{print $8}')
        if [ -z $IFACE ]; then
            echo "Error - fail get name network interface!"
            route
            read -p "Please enter name network interface: " IFACE
        fi

        # set name transport protocol
        read -p "Please enter protocol [default udp]: " PROTO
        if [ -z $PROTO ]; then
            PROTO=udp
        fi

        # set port
        read -p "Please enter protocol [default 1194]: " PORT
        if [ -z $PORT ]; then
            PORT=1194
        fi

        # OpenVPN
        iptables -A INPUT -i "$IFACE" -m state --state NEW -p "$PROTO" --dport "$PORT" -j ACCEPT
        # Allow TUN interface connection to OpenVPN server
        iptables -A INPUT -i tun+ -j ACCEPT
        # Allow TUN interface connection to be forwarded throuth other interface
        iptables -A FORWARD -i tun+ -j ACCEPT
        iptables -A FORWARD -i tun+ -o "$IFACE" -m state --state RELATED,ESTABLISHED -j ACCEPT
        iptables -A FORWARD -i "$IFACE" -o tun+ -m state --state RELATED,ESTABLISHED -j ACCEPT
        # NAT the VPN client traffic to the internet
        iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o "$IFACE" -j MASQUERADE

        # iptables save
        sudo netfilter-persistent save

        # create group "nobody"
        if [ $(sudo cat /etc/group | grep nobody) == 1 ]; then
            sudo groupadd nobody && echo "Success create group nobody"
            echo "---"
        fi

        # change dir
        cd ${PATHRSA}

        # generate REQ CA & KEY ovpn server
        ${PATHRSA}/easyrsa gen-req server nopass

        if [ ! -f ${PATHEASYRSAREQ} ]; then
            echo "Error: fail generate file request - ${PATHEASYRSAREQ}"
            exit 1
        fi

        if [ ! -f ${PATHEASYRSAKEY} ]; then
            echo "Error: fail generate file key - ${PATHEASYRSAKEY}"
            exit 1
        fi

        # sign REQ CA ovpn server
        ${PATHRSA}/easyrsa sign-req server server

        # create server dir
        sudo mkdir -p ${PATHOPENVPN}

        if [ -d ${PATHOPENVPN} ]; then

            sudo cp ${PATHRSAKEY} ${PATHOPENVPN}
            sudo cp ${PATHRSACRT} ${PATHOPENVPN}
            sudo cp ${PATHRSACA} ${PATHOPENVPN}

            # gen TLS server key
            ${PATHOPENVPNEXE} --genkey --secret ${PATHRSATA}

            if [ ! -f ${PATHRSATA} ]; then
                echo "Error: fail generate file key - ${PATHRSATA}"
                exit 1
            fi

            sudo cp ${PATHRSATA} ${PATHOPENVPN}

            echo "Server files list:"
            sudo ls -la ${PATHOPENVPN}
            echo "---"
            echo "Server routing table:"
            sudo route
            echo "---"
        else
            echo "Error: fail create dir - ${PATHOPENVPN}"
            exit $?
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
