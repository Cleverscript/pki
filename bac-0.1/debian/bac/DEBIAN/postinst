#!/bin/sh
# postinst script for bcp
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


BACSERVICE=/etc/systemd/system/bac.service

case "$1" in
    configure)

        # check exist sile service
        if [ ! -f $BACSERVICE ]; then
            echo "Error: ${BACSERVICE} file  not exist, exited!"
            exit 1
        fi

        # get GPG key
        while :
        do
            read -p "Enter your GPG key (email) which can decrypt the backup archive: " email
            if [ ! -z "$email" ]; then
                sed -i "s|#GPGKEY#|$email|g" $BACSERVICE
                break
            fi
        done

        # get container name 
        while :
        do
            read -p "Enter cloud storeage container name: " container
            if [ ! -z "$container" ]; then
                sed -i "s|#CONTAINER#|$container|g" $BACSERVICE
                break
            fi
        done

        # get user
        while :
        do
            read -p "Enter user under which to run the service: " user
            if [ ! -z "$user" ]; then
                sed -i "s|#USER#|$user|g" $BACSERVICE
                break
            fi
        done

        # get group
        while :
        do
            read -p "Enter group user under which to run the service: " group
            if [ ! -z "$group" ]; then
                sed -i "s|#GROUP#|$group|g" $BACSERVICE
                break
            fi
        done
        
        # View result
        if [ -f $S3CFGCONF ]; then

            echo "\033[42m\033[30m +++ Install success completed! +++ \033[0m"
        
            echo "\033[33m Config service \033[0m"
            echo "\033[33m "
            cat $BACSERVICE
            echo " \033[0m"

            echo "\033[33m Activate the backup service by running the following commands: \033[0m"

            echo "\033[33m "
            echo "$ sudo systemctl enable bac.timer"
            echo "$ sudo systemctl start bac.timer"
            echo "$ sudo systemctl enable bac.service"
            echo "$ sudo systemctl start bac.service"
            echo "$ sudo systemctl status bac.timer"
            echo " \033[0m"

        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
